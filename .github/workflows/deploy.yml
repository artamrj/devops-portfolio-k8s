name: Deploy to GKE

on:
  push:
    branches:
      - main
    paths:
      - "index.template.html"
      - "styles.css"
      - "Dockerfile"
      - "k8s/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up QEMU and Docker Buildx for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to DockerHub
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and push the Docker image for linux/amd64 (or multi-arch if needed)
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          pull: true
          no-cache: true
          tags: artaa/devops-portfolio-k8s:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.6.0
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Set up Cloud SDK without export_default_credentials (it is no longer a valid input)
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          install_components: gke-gcloud-auth-plugin

      # Get GKE cluster credentials
      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --zone ${{ secrets.GKE_ZONE }} \
            --project ${{ secrets.GKE_PROJECT }}

      # Deploy your Kubernetes manifests
      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f k8s/
          # Restart the deployment to pick up any configuration changes
          kubectl rollout restart deployment/devops-portfolio-k8s
          kubectl rollout status deployment/devops-portfolio-k8s